[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
python_paths = tests

# Plugin registration
addinivalue_line = markers

# Output formatting
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --cov=wise_mise_mcp
    --cov-config=.coveragerc
    --cov-report=term-missing
    --cov-report=html:tests/coverage_html
    --cov-report=xml:tests/coverage.xml
    --cov-report=json:tests/coverage.json
    --cov-fail-under=85
    --cov-branch
    --junitxml=tests/junit.xml

# Test markers
markers =
    unit: Unit tests for individual components
    integration: End-to-end integration tests
    performance: Performance and load tests  
    benchmark: Benchmark tests for performance regression detection
    slow: Tests that take longer than 10 seconds
    security: Security vulnerability tests
    requires_network: Tests that require network access
    requires_docker: Tests that require Docker
    requires_mcp_client: Tests that require MCP client library
    memory: Memory usage and leak detection tests
    stress: Stress and load testing

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::ResourceWarning

# Test timeout (prevent hanging tests)
timeout = 300
timeout_method = thread

# Asyncio configuration
asyncio_mode = auto

# Minimum required versions
minversion = 8.0

# Test order randomization
# addopts = --random-order

# Performance test configuration
performance_threshold_ms = 1000
memory_threshold_mb = 100

# Coverage configuration
[coverage:run]
source = wise_mise_mcp
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */node_modules/*

[coverage:report]  
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = tests/coverage_html